一、什么是工厂方法模式：
1、工厂方法模式，属于类的创建模式，又被称为多态工厂模式。定义一个创建产品对象的工厂接口，将实际创建工作推迟到子类中。
核心工厂不在负责创建对象，这样核心类成为一个抽象工厂，具体工厂子类继承此接口，这样进一步抽象的好处在于，可以使系统在
不修改具体工厂角色的情况下引进新产品；
二、模式中包含的角色和职责：
1、抽象工厂（Create）角色：
工厂方法模式的核心，任何工厂类必须实现此接口；
2、具体工厂（Concrete Create）角色：
具体工厂是抽象工厂的一个实现，负责实例化产品对象，每一个对象对应一个具体的工厂；
3、抽象（Product）角色：
产品的公共接口，定义产品的共有特性；
4、具体产品（Concrete Product）角色：
工厂方法模式创建的具体对象，例如Apple，Banana 等；
三、工厂方法模式和简单工厂模式比较：
1、两种模式在结构上的不同不是很明显。工厂方法类的核心是一个抽象工厂，而简单工厂模式把核心放在一个具体类上；
2、工厂方法模式之所以叫多态工厂模式，是因为具体工厂类都有一个相同抽象的接口或抽象类；
3、当系统需要增加新产品时，仅仅需要添加一个对象以及一个具体的工厂类，原有工厂类不需要做任何修改，也不需要改客户端，很好的
符合了“开放-封闭”原则。而简单工厂模式添加新产品后不得不修改工厂方法，扩展性不好；
4、工厂方法模式可以退化成简单工厂模式；
